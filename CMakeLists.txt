cmake_minimum_required(VERSION 2.8)

set(VER "1.0.0.0" CACHE STRING "Set the version number")
cmake_policy(SET CMP0048 NEW)

project(winfstest VERSION "${VER}" LANGUAGES C)
message(STATUS "ver: ${VER} pv: ${PROJECT_VERSION} ")
set(PROJECT_TITLE "Win Fs Test")
set(PROJECT_DESCRIPTION "Windows file system testing")
set(CPACK_PACKAGE_VERSION "${VER}")
set(CPACK_PACKAGE_NAME "${PROJECT_NAME}")
set(CPACK_GENERATOR "ZIP")
set(CPACK_STRIP_FILES TRUE)
set(CPACK_STRIP_FILES TRUE)
set(CPACK_PACKAGE_EXECUTABLES "${PROJECT_NAME};${PROJECT_TITLE}")

set(SRC winfstest/winfstest.c winfstest/winerror.i)

set(CMAKE_BUILD_TYPE "Release" CACHE STRING "Set the build type (${CMAKE_CONFIGURATION_TYPES})")
set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS ${CMAKE_CONFIGURATION_TYPES})
if(NOT DEFINED CMAKE_BUILD_TYPE OR "${CMAKE_BUILD_TYPE}" STREQUAL "")
	set(CMAKE_BUILD_TYPE "Release")
endif()

set(OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/bin")
file(COPY "TestSuite/" DESTINATION "${OUTPUT_DIRECTORY}")

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${OUTPUT_DIRECTORY} CACHE PATH "Runtime Output Directory")
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${OUTPUT_DIRECTORY} CACHE PATH "Library Output Directory")
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${OUTPUT_DIRECTORY} CACHE PATH "Archive Output Directory")
list(APPEND FLAGS_VARS CMAKE_C_FLAGS)
list(APPEND FLAGS_VARS CMAKE_CXX_FLAGS)
foreach(OUTPUTCONFIG ${CMAKE_CONFIGURATION_TYPES})
		string(TOUPPER ${OUTPUTCONFIG} OUTPUTCONFIG)
		list(APPEND FLAGS_VARS CMAKE_C_FLAGS_${OUTPUTCONFIG})
		list(APPEND FLAGS_VARS CMAKE_CXX_FLAGS_${OUTPUTCONFIG})
		set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_${OUTPUTCONFIG} ${OUTPUT_DIRECTORY} CACHE PATH "Runtime Output Directory")
		set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_${OUTPUTCONFIG} ${OUTPUT_DIRECTORY} CACHE PATH "Library Output Directory")
		set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_${OUTPUTCONFIG} ${OUTPUT_DIRECTORY} CACHE PATH "Archive Output Directory")
endforeach()

foreach(flag_var IN LISTS FLAGS_VARS)
   if(${flag_var} MATCHES "/MD")
      string(REGEX REPLACE "/MD" "/MT" ${flag_var} "${${flag_var}}")
   endif()
endforeach()

include(CheckCCompilerFlag)
CHECK_C_COMPILER_FLAG("-std=c99" COMPILER_SUPPORTS_C99)
if(COMPILER_SUPPORTS_C99)
	set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -std=c99")
endif()

add_executable(${PROJECT_NAME} ${SRC})

install(TARGETS ${PROJECT_NAME} RUNTIME DESTINATION "." COMPONENT bin)
install(DIRECTORY "${OUTPUT_DIRECTORY}/t" DESTINATION "." COMPONENT bin)
install(FILES
	"${OUTPUT_DIRECTORY}/License"
	"${OUTPUT_DIRECTORY}/run-winfstest.bat"
	"${OUTPUT_DIRECTORY}/simpletap.py"
	"${OUTPUT_DIRECTORY}/winfstest.py"
	DESTINATION "." COMPONENT bin)

include(CPack)
